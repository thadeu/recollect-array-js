import t from"lodash.filter";import r from"lodash.last";import e from"lodash.chunk";import n from"lodash.isplainobject";import i from"lodash.isfunction";import s from"lodash.get";const c=(t,r,e)=>s(t,r)==e,u=(t,r,e)=>{const n=s(t,r);return e.match(/^([^*])(\w*)([*])$/)?String(n).startsWith(e.replace(/\*$/,"")):e.match(/^([*])(\w*)([^*])$/)?String(n).endsWith(e.replace(/^\*/,"")):!!e.match(/^\*\w*\*$/)&&String(n).includes(e.replace(/^\*/,"").replace(/\*$/,""))};class o{static factory(t,r,e){if(this.PREDICATES.includes(t)&&this[t])return i(e)&&(e=e()),this[t](r,e)}static empty(t,r){return function(e){let n=s(e,t),i=[null,void 0,NaN,""," "];return r?i.includes(n):!i.includes(n)}}static len(t,r){return function(e){let n=s(e,t);return r>String(n).length}}static regex(t,r){return function(e){let n=s(e,t);return new RegExp(r,"g").test(n)}}static reg(t,r){return this.regex(t,r)}static not_reg(t,r){return!this.regex(t,r)}static not_regex(t,r){return!this.regex(t,r)}static matches(t,r){return function(e){let n=[s(e,t)].flatMap(t=>t);return(r=[r].flatMap(t=>t)).some(t=>n.includes(t))}}static not_matches(t,r){return!this.matches(t,r)}static exists(t,r){return e=>"true"==String(r)?this.not_in(t,["",null,void 0])(e):this.in(t,["",null,void 0])(e)}static not_exists(t,r){return r=>this.exists(t,!1)(r)}static ex(t,r){return r=>this.exists(t,!0)(r)}static not_ex(t,r){return r=>this.exists(t,!1)(r)}static in(t,r){return e=>this.matches(t,r)(e)}static not_in(t,r){return e=>!this.matches(t,r)(e)}static eq(t,r){return function(e){return c(e,t,r)}}static not_eq(t,r){return function(e){return!c(e,t,r)}}static gte(t,r){return function(e){return Number(s(e,t))>=r}}static gt(t,r){return function(e){return Number(s(e,t))>r}}static lte(t,r){return function(e){return Number(s(e,t))<=r}}static lt(t,r){return function(e){return Number(s(e,t))<r}}static cont(t,r){return function(e){return u(e,t,r)}}static not_cont(t,r){return function(e){return!u(e,t,r)}}static starts_with(t,r){return function(e){return u(e,t,`${r}*`)}}static not_starts_with(t,r){return function(e){return!u(e,t,`${r}*`)}}static st(t,r){return function(e){return u(e,t,`${r}*`)}}static not_st(t,r){return function(e){return!u(e,t,`${r}*`)}}}o.PREDICATES=["eq","not_eq","gte","lte","gt","lt","matches","not_matches","in","not_in","cont","not_cont","starts_with","not_starts_with","st","not_st","exists","not_exists","ex","not_ex","len","regex","not_regex","reg","not_reg","empty"];const a=(r,e,n,i)=>t(r,o.factory(e,n,i)),l=(t,r,e)=>{for(let[n,i]of Object.entries(e))t=a(t,n,r,i);return t},h=(t,e,n)=>{let i=e.split("_"),s=r(i),c=e.replace(`_${s}`,"");return a(t,s,c,n)};class f{static filter(t,r){let e=Array.from(t);return e=this.recollect(e,r),e}}f.recollect=(t,r)=>{let i=Object.entries(r).flatMap(t=>t),s=e(i,2);for(let[e,i]of s)t=n(i)?l(t,e,i):h(t,e,r[e]);return t};export{f as RecollectArray,f as default};
//# sourceMappingURL=index.modern.mjs.map
