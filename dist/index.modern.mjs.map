{"version":3,"file":"index.modern.mjs","sources":["../src/predicates.ts","../src/utils.ts","../src/recollect-array.ts"],"sourcesContent":["import isFunction from 'lodash.isfunction'\nimport get from 'lodash.get'\n\nconst equals = (data, field, value) => get(data, field) == value\n\nconst contains = (data, field, value) => {\n  const target = get(data, field)\n\n  let startRegex = /^([^*])(\\w*)([*])$/\n  let endRegex = /^([*])(\\w*)([^*])$/\n  let includeRegex = /^\\*\\w*\\*$/\n\n  if (value.match(startRegex)) {\n    return target.startsWith(value.replace(/\\*$/, ''))\n  } else if (value.match(endRegex)) {\n    return target.endsWith(value.replace(/^\\*/, ''))\n  } else if (value.match(includeRegex)) {\n    return target.includes(value.replace(/^\\*/, '').replace(/\\*$/, ''))\n  } else {\n    return false\n  }\n}\n\nexport class Predicate {\n  static PREDICATES = [\n    'eq',\n    'not_eq',\n    'gte',\n    'lte',\n    'gt',\n    'lt',\n    'matches',\n    'not_matches',\n    'in',\n    'not_in',\n    'cont',\n    'not_cont',\n    'starts_with',\n    'not_starts_with',\n    'st',\n    'not_st',\n    'exists',\n    'not_exists',\n    'ex',\n    'not_ex'\n  ]\n\n  static factory(predicate, field, value) {\n    if (!this.PREDICATES.includes(predicate)) return undefined\n    if (!this[predicate]) return undefined\n\n    if (isFunction(value)) {\n      value = value()\n    }\n\n    return this[predicate](field, value)\n  }\n\n  static matches(field, value) {\n    return function (data) {\n      let target = [get(data, field)].flatMap((o) => o)\n      value = [value].flatMap((o) => o)\n\n      return value.some((o: any) => target.includes(o))\n    }\n  }\n\n  static not_matches(field, value) {\n    return !this.matches(field, value)\n  }\n\n  static exists(field, value) {\n    return (data) => {\n      if (String(value) == 'true') {\n        return this.not_in(field, ['', null, undefined])(data)\n      } else {\n        return this.in(field, ['', null, undefined])(data)\n      }\n    }\n  }\n\n  static not_exists(field, value) {\n    return (data) => {\n      return this.exists(field, false)(data)\n    }\n  }\n\n  static ex(field, value) {\n    return (data) => {\n      return this.exists(field, true)(data)\n    }\n  }\n\n  static not_ex(field, value) {\n    return (data) => {\n      return this.exists(field, false)(data)\n    }\n  }\n\n  static in(field, value) {\n    return (data) => {\n      return this.matches(field, value)(data)\n    }\n  }\n\n  static not_in(field, value) {\n    return (data) => {\n      return !this.matches(field, value)(data)\n    }\n  }\n\n  static eq(field, value) {\n    return function (data) {\n      return equals(data, field, value)\n    }\n  }\n\n  static not_eq(field, value) {\n    return function (data) {\n      return !equals(data, field, value)\n    }\n  }\n\n  static gte(field, value) {\n    return function (data) {\n      const target = get(data, field)\n\n      return target >= value\n    }\n  }\n\n  static gt(field, value) {\n    return function (data) {\n      const target = get(data, field)\n\n      return target > value\n    }\n  }\n\n  static lte(field, value) {\n    return function (data) {\n      const target = get(data, field)\n\n      return target <= value\n    }\n  }\n\n  static lt(field, value) {\n    return function (data) {\n      const target = get(data, field)\n\n      return target < value\n    }\n  }\n\n  static cont(field, value) {\n    return function (data) {\n      return contains(data, field, value)\n    }\n  }\n\n  static not_cont(field, value) {\n    return function (data) {\n      return !contains(data, field, value)\n    }\n  }\n\n  static starts_with(field, value) {\n    return function(data) {\n      return contains(data, field, `${value}*`)\n    }\n  }\n\n  static st(field, value) {\n    return this.starts_with(field, value)\n  }\n\n  static not_st(field, value) {\n    return !this.starts_with(field, value)\n  }\n}\n\nexport default Predicate\n","import filter from 'lodash.filter'\nimport last from 'lodash.last'\nimport chunk from 'lodash.chunk'\nimport isPlainObject from 'lodash.isplainobject'\n\nimport Predicate from '@/predicates'\n\nexport { isPlainObject }\n\nexport const chunkArray = (array: any[], size: number) => chunk(array, size)\n\nexport const filtering = (data: [], predicate: string, field: string, value: any) => {\n  return filter(data, Predicate.factory(predicate, field, value))\n}\n\nexport const applyRuleObject = (data, ruleField, ruleValue) => {\n  for (let [predicate, value] of Object.entries(ruleValue)) {\n    data = filtering(data, predicate, ruleField, value)\n  }\n\n  return data\n}\n\nexport const applyRuleValuable = (data, ruleField, ruleValue) => {\n  let fieldable = ruleField.split('_')\n  let predicate = last(fieldable) as string\n  let attr = ruleField.replace(`_${predicate}`, '')\n\n  return filtering(data, predicate, attr, ruleValue)\n}\n","import { applyRuleObject, applyRuleValuable, isPlainObject, chunkArray } from '@/utils'\n\nexport class RecollectArray {\n  static recollect = (data: any[], conditions: object): any[] => {\n    let entries = Object.entries(conditions).flatMap((a) => a)\n    let rules = chunkArray(entries, 2)\n\n    for (let [ruleField, ruleValue] of rules) {\n      if (isPlainObject(ruleValue)) {\n        data = applyRuleObject(data, ruleField, ruleValue)\n      } else {\n        data = applyRuleValuable(data, ruleField, conditions[ruleField as string])\n      }\n    }\n\n    return data\n  }\n\n  static filter(data: any[], conditions: object): any[] {\n    let clone = Array.from(data)\n    clone = this.recollect(clone, conditions)\n\n    return clone\n  }\n}\n\nexport default RecollectArray\n"],"names":["equals","data","field","value","get","contains","target","match","startsWith","replace","endsWith","includes","Predicate","static","predicate","this","PREDICATES","isFunction","flatMap","o","some","matches","String","not_in","undefined","in","exists","starts_with","filtering","filter","factory","applyRuleObject","ruleField","ruleValue","Object","entries","applyRuleValuable","fieldable","split","last","attr","RecollectArray","conditions","clone","Array","from","recollect","a","rules","chunk","isPlainObject"],"mappings":"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"}