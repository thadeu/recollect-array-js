{"version":3,"file":"index.js","sources":["../src/predicates.ts","../src/utils.ts","../src/recollect-array.ts"],"sourcesContent":["import isFunction from 'lodash.isfunction'\nimport get from 'lodash.get'\n\nconst equals = (data, field, value) => get(data, field) == value\n\nconst contains = (data, field, value) => {\n  const target = get(data, field)\n\n  let startRegex = /^([^*])(\\w*)([*])$/\n  let endRegex = /^([*])(\\w*)([^*])$/\n  let includeRegex = /^\\*\\w*\\*$/\n\n  if (value.match(startRegex)) {\n    return String(target).startsWith(value.replace(/\\*$/, ''))\n  } else if (value.match(endRegex)) {\n    return String(target).endsWith(value.replace(/^\\*/, ''))\n  } else if (value.match(includeRegex)) {\n    return String(target).includes(value.replace(/^\\*/, '').replace(/\\*$/, ''))\n  } else {\n    return false\n  }\n}\n\nexport class Predicate {\n  static PREDICATES = [\n    'eq',\n    'not_eq',\n    'gte',\n    'lte',\n    'gt',\n    'lt',\n    'matches',\n    'not_matches',\n    'in',\n    'not_in',\n    'cont',\n    'not_cont',\n    'starts_with',\n    'not_starts_with',\n    'st',\n    'not_st',\n    'exists',\n    'not_exists',\n    'ex',\n    'not_ex',\n    'len',\n    'regex',\n    'not_regex',\n    'reg',\n    'not_reg',\n    'empty'\n  ]\n\n  static factory(predicate, field, value) {\n    if (!this.PREDICATES.includes(predicate)) return undefined\n    if (!this[predicate]) return undefined\n\n    if (isFunction(value)) {\n      value = value()\n    }\n\n    return this[predicate](field, value)\n  }\n\n  static empty(field, value) {\n    return function (data) {\n      let target = get(data, field)\n      let flags = [null, undefined, NaN, '', ' ']\n\n      if (value) {\n        return flags.includes(target)\n      }\n\n      return !flags.includes(target)\n    }\n  }\n\n  static len(field, value) {\n    return function (data) {\n      let target = get(data, field)\n      return value > String(target).length\n    }\n  }\n\n  static regex(field, value) {\n    return function(data) {\n      let target = get(data, field)\n      let reg = new RegExp(value, 'g')\n\n      return reg.test(target)\n    }\n  }\n\n  static reg(field, value) {\n    return this.regex(field, value)\n  }\n\n  static not_reg(field, value) {\n    return !this.regex(field, value)\n  }\n\n  static not_regex(field, value) {\n    return !this.regex(field, value)\n  }\n\n  static matches(field, value) {\n    return function (data) {\n      let target = [get(data, field)].flatMap((o) => o)\n      value = [value].flatMap((o) => o)\n\n      return value.some((o: any) => target.includes(o))\n    }\n  }\n\n  static not_matches(field, value) {\n    return !this.matches(field, value)\n  }\n\n  static exists(field, value) {\n    return (data) => {\n      if (String(value) == 'true') {\n        return this.not_in(field, ['', null, undefined])(data)\n      } else {\n        return this.in(field, ['', null, undefined])(data)\n      }\n    }\n  }\n\n  static not_exists(field, value) {\n    return (data) => {\n      return this.exists(field, false)(data)\n    }\n  }\n\n  static ex(field, value) {\n    return (data) => {\n      return this.exists(field, true)(data)\n    }\n  }\n\n  static not_ex(field, value) {\n    return (data) => {\n      return this.exists(field, false)(data)\n    }\n  }\n\n  static in(field, value) {\n    return (data) => {\n      return this.matches(field, value)(data)\n    }\n  }\n\n  static not_in(field, value) {\n    return (data) => {\n      return !this.matches(field, value)(data)\n    }\n  }\n\n  static eq(field, value) {\n    return function (data) {\n      return equals(data, field, value)\n    }\n  }\n\n  static not_eq(field, value) {\n    return function (data) {\n      return !equals(data, field, value)\n    }\n  }\n\n  static gte(field, value) {\n    return function (data) {\n      const target = Number(get(data, field))\n\n      return target >= value\n    }\n  }\n\n  static gt(field, value) {\n    return function (data) {\n      const target = Number(get(data, field))\n\n      return target > value\n    }\n  }\n\n  static lte(field, value) {\n    return function (data) {\n      const target = Number(get(data, field))\n\n      return target <= value\n    }\n  }\n\n  static lt(field, value) {\n    return function (data) {\n      const target = Number(get(data, field))\n\n      return target < value\n    }\n  }\n\n  static cont(field, value) {\n    return function (data) {\n      return contains(data, field, value)\n    }\n  }\n\n  static not_cont(field, value) {\n    return function (data) {\n      return !contains(data, field, value)\n    }\n  }\n\n  static starts_with(field, value) {\n    return function(data) {\n      return contains(data, field, `${value}*`)\n    }\n  }\n\n  static not_starts_with(field, value) {\n    return function(data) {\n      return !contains(data, field, `${value}*`)\n    }\n  }\n\n  static st(field, value) {\n    return function(data) {\n      return contains(data, field, `${value}*`)\n    }\n  }\n\n  static not_st(field, value) {\n    return function(data) {\n      return !contains(data, field, `${value}*`)\n    }\n  }\n}\n\nexport default Predicate\n","import filter from 'lodash.filter'\nimport last from 'lodash.last'\nimport chunk from 'lodash.chunk'\nimport isPlainObject from 'lodash.isplainobject'\n\nimport Predicate from '@/predicates'\n\nexport { isPlainObject }\n\nexport const chunkArray = (array: any[], size: number) => chunk(array, size)\n\nexport const filtering = (data: [], predicate: string, field: string, value: any) => {\n  return filter(data, Predicate.factory(predicate, field, value))\n}\n\nexport const applyRuleObject = (data, ruleField, ruleValue) => {\n  for (let [predicate, value] of Object.entries(ruleValue)) {\n    data = filtering(data, predicate, ruleField, value)\n  }\n\n  return data\n}\n\nexport const applyRuleValuable = (data, ruleField, ruleValue) => {\n  let fieldable = ruleField.split('_')\n  let predicate = last(fieldable) as string\n  let attr = ruleField.replace(`_${predicate}`, '')\n\n  return filtering(data, predicate, attr, ruleValue)\n}\n","import { applyRuleObject, applyRuleValuable, isPlainObject, chunkArray } from '@/utils'\n\nexport class RecollectArray {\n  static recollect = (data: any[], conditions: object): any[] => {\n    let entries = Object.entries(conditions).flatMap((a) => a)\n    let rules = chunkArray(entries, 2)\n\n    for (let [ruleField, ruleValue] of rules) {\n      if (isPlainObject(ruleValue)) {\n        data = applyRuleObject(data, ruleField, ruleValue)\n      } else {\n        data = applyRuleValuable(data, ruleField, conditions[ruleField as string])\n      }\n    }\n\n    return data\n  }\n\n  static filter(data: any[], conditions: object): any[] {\n    let clone = Array.from(data)\n    clone = this.recollect(clone, conditions)\n\n    return clone\n  }\n}\n\nexport default RecollectArray\n"],"names":["equals","data","field","value","get","contains","target","match","String","startsWith","replace","endsWith","includes","Predicate","factory","predicate","this","PREDICATES","isFunction","empty","flags","undefined","NaN","len","length","regex","RegExp","test","reg","not_reg","not_regex","matches","flatMap","o","some","not_matches","exists","_this","not_in","not_exists","_this2","ex","_this3","not_ex","_this4","_this5","_this6","eq","not_eq","gte","Number","gt","lte","lt","cont","not_cont","starts_with","not_starts_with","st","not_st","filtering","filter","applyRuleObject","ruleField","ruleValue","_i","_Object$entries","Object","entries","_Object$entries$_i","applyRuleValuable","fieldable","split","last","attr","RecollectArray","conditions","clone","Array","from","recollect","_step","a","_iterator","_createForOfIteratorHelperLoose","chunk","done","_step$value","isPlainObject"],"mappings":"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"}